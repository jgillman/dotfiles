# If not running interactively, don't do anything
[ -z "$PS1" ] && return


# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/Sites

# set default editor
export VISUAL=vim
export EDITOR=vim

# set emacs style bindings
bindkey -e


# Returns whether the given command is executable or aliased.
_has() {
  return "$( hash "$1" >/dev/null 2>&1 )"
}


# PATH MODIFICATIONS {{{1

# Functions which modify the path given a directory, but only if the directory
# exists and is not already in the path. (Super useful in ~/.zshlocal)

_prepend_to_path() {
  if [ -d "$1" -a -z ${path[(r)$1]} ]; then
    path=($1 $path);
  fi
}

_append_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($1 $path);
  fi
}

_force_prepend_to_path() {
  path=($1 ${(@)path:#$1})
}



# If figlet is installed, print the hostname for new session
if _has figlet; then
  hostname -s | figlet -w 120 -f slant
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

if [[ -z $TMUX ]]; then
  # load the path files
  for file in ${(M)config_files:#*/path.zsh}
  do
    source $file
  done
fi

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset file
unset config_files


# use .localrc for SUPER SECRET CRAP that you don't want in your public,
# versioned repo. This should be last so it can override global configs.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi


# Don't hang with Ctrl+s / Ctrl+q
stty -ixon
